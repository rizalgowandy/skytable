███████ ██   ██ ██    ██ ████████  █████  ██████  ██      ███████
██      ██  ██   ██  ██     ██    ██   ██ ██   ██ ██      ██
███████ █████     ████      ██    ███████ ██████  ██      █████
     ██ ██  ██     ██       ██    ██   ██ ██   ██ ██      ██
███████ ██   ██    ██       ██    ██   ██ ██████  ███████ ███████

Skytable {version} | https://github.com/skytable/skytable
Copyright (c) Sayan N. <ohsayan@outlook.com>

Skytable database server daemon (skyd): data restore utility

Details:
  The `restore` subcommand is used to restore data from an existing manifest-based
  backup located at the given path.

Usage: skyd restore [FLAGS] [OPTIONS]

Required options:
  --from <path>                 Path to the backup that is to be restored

Options:
  --to <path>                   Set the working directory, if different from the
                                current directory

Flags:
  --skip-compatibility-check    This flag is to be used when the current data is
                                corrupted and hence cannot be used to verify
                                compatibility information
  --allow-incompatible          (unsafe) Even if the destination data uses an
                                unsupported driver version continue to restore
  --allow-different-host        (unsafe) Even if this backup is from a different
                                host, allow it to be restored
  --allow-invalid-date          (unsafe) Ignore an invalid date in the backup
  --delete-on-restore           Once the data is restored, delete the backup

Informational flags:
  -h, --help                    Display this help menu and exit.
  -v, --version                 Display the version number and exit.

Examples:
  skyd restore --from /mnt/nfsbackups/mybackup-DDMMYYYY --to /var/lib/skytable

Notes:
  - The backup pointed to must be a manifest based backup. Otherwise it cannot be
  restored using this tool and needs manual intervention
  - If you use the `--allow-other-host` flag you must guarantee that it is ok
  to restore a backup from a potentially different node

{further_assistance}