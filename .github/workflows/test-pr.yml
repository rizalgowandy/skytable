name: Test (PR)

on: [pull_request]
env:
  BUILD: false
  CARGO_TERM_COLOR: always
jobs:
  test:
    name: Test

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux-stable, macos-stable, windows-stable]
        include:
          - build: linux-stable
            os: ubuntu-latest
            rust: x86_64-unknown-linux-gnu
          - build: macos-stable
            os: macos-latest
            rust: x86_64-apple-darwin
          - build: windows-stable
            os: windows-latest
            rust: x86_64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust }}
      - name: Setup environment
        run: |
          chmod +x ci/buildvars.sh
          ci/buildvars.sh
        if: env.BUILD == 'true'
      - name: Run Tests
        run: make test
        env:
          RUST_BACKTRACE: 1
